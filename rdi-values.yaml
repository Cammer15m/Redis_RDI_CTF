# Default RDI values in YAML format.
# Variables to template configuration.

global:
  # DO NOT modify this value.
  vmMode: false

  # Indicates whether the deployment is intended for an OpenShift environment.
  openShift: false

  # Global log level, one of TRACE, DEBUG, INFO, WARNING, ERROR, CRITICAL.
  # If specific component log levels are not set, this value will be used.
  logLevel: INFO

  # Global image settings.
  # If using a private image registry, update the default values accordingly.
  image:
    # Docker image registry.
    registry: docker.io

    # Docker image repository.
    repository: redis

    # Docker image tag.
    tag: 1.12.2

  # Image pull secrets to be used when using a private image registry.
  # imagePullSecrets:
  #   - name: pullSecret1

  # Container default security context.
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  securityContext:
    runAsNonRoot: true
    # On OpenShift, user and group 1000 are usually not allowed.
    # If using OpenShift, set runAsUser and runAsGroup to values in your project's user and group ranges.
    # You can examine the latter via `oc get project <rid-project-name> -o yaml | grep "openshift.io/sa.scc"`
    runAsUser: 1000
    runAsGroup: 1000
    allowPrivilegeEscalation: false

  # Custom labels and annotations for all RDI resources.
  # labels:
    # foo: bar
  # annotations:
    # foo: bar

  # Set to 'false' if you prefer to manually create the `rdi-db-ssl` and `rdi-sys-config` secrets.
  # Make sure to create these secrets before installing this Helm chart.
  # Refer to their corresponding templates for the keys that RDI expects to find in them.
  createSecrets: true

  # External secrets configuration.
  externalSecrets:
    # DO NOT modify this value.
    enabled: false

# Configuration of the RDI Redis database connection
connection:
  # The hostname or IP of the RDI Redis database.
  # host: ""

  # The port of the RDI Redis database.
  # port: ""

  # Username and password for the RDI Redis database.
  # If using the default password, the username should be an empty string.
  username: ""
  # password: ""

  ssl:
    # Set to `true` when using TLS or mTLS for the RDI Redis database connection.
    enabled: false

    # CA certificate PEM file content (required for both TLS and mTLS).
    # cacert: ""

    # Certificate PEM file content (required only for mTLS).
    # cert: ""

    # Private key PEM file content (required only for mTLS).
    # key: ""

    # Passphrase for decrypting the private key, if the key is encrypted.
    # keyPassword: ""

# Configuration of the reloader.
# Set `isOpenshift` to `true` if deploying on OpenShift.
reloader:
  reloader:
    watchGlobally: false
    isOpenshift: false
    deployment:
      containerSecurityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
      securityContext:
        runAsUser: null
      # Custom labels and annotations for the reloader deployment and pods.
      # labels: {}
      # annotations: {}
    # serviceAccount:
      # Custom labels and annotations for the reloader service account.
      # labels: {}
      # annotations: {}
    # rbac:
      # Custom labels and annotations for the reloader RBAC resources.
      # labels: {}
      # annotations: {}
  fullnameOverride: rdi-reloader

# Configuration of the RDI Operator.
operator:
  # Operator image settings.
  image:
    name: rdi-operator

    # Image pull policy.
    # ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    pullPolicy: IfNotPresent

  # Operator log level, one of TRACE, DEBUG, INFO, WARNING, ERROR, CRITICAL.
  # If not set, global.loglevel will be used.
  # logLevel: INFO

  # Custom labels and annotations for Operator deployment and pods.
  # labels:
    # foo: bar
  # annotations:
    # foo: bar

  # Operator container resources
  # resources:
    # limits:
      # cpu: 500m
      # memory: 128Mi
    # requests:
      # cpu: 10m
      # memory: 64Mi

  # Operator container liveness, readiness, and startup probe parameters.
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  liveness:
    failureThreshold: 3
    periodSeconds: 20
  readiness:
    failureThreshold: 3
    periodSeconds: 10
  startup:
    failureThreshold: 24
    periodSeconds: 5

  # Operator ServiceAccount resources configuration.
  # serviceAccount:
    # Set to false to disable the creation of ServiceAccount resources.
    # enabled: true

    # Additional ServiceAccount resources labels and annotations.
    # labels: {}
    # annotations: {}

  # Operator RBAC resources (Role, RoleBinding, ClusterRole, ClusterRoleBinding) configuration.
  # rbac:
    # Set to false to disable the creation of RBAC resources.
    # enabled: true

    # Additional RBAC resources labels and annotations.
    # labels: {}
    # annotations: {}

  # Operator CRD resources configuration.
  # crd:
    # Set to false to disable the creation of CRD resources.
    # enabled: true

    # Enabling this option adds the "helm.sh/resource-policy": keep
    # annotation to the CRDs, ensuring they remain installed even when
    # the Helm release is uninstalled.
    # NOTE: Removing the CRDs will also remove all cert-manager CR(s)
    # (Certificates, Issuers, ...) due to garbage collection.
    # keep: false

    # Additional CRD resources labels and annotations.
    # labels: {}
    # annotations: {}

  # Operator metrics configuration.
  # metrics:
    # Set to true to enable the metrics and their associated resources.
    # enabled: true

    # Additional metrics service labels and annotations.
    # labels: {}
    # annotations: {}

  # Operator webhooks configuration.
  # webhooks:
    # Set to false to disable the webhooks and their associated resources.
    # If webhooks are enabled, either certificate management jobs or cert-manager must be enabled, but not both.
    # enabled: true

    # Additional webhook service labels and annotations.
    # labels: {}
    # annotations: {}

  # Operator cert-manager (https://cert-manager.io/) resources configuration.
  # certmanager:
    # Set to true to enable the certificate management by cert-manager.
    # If enabled, certificate management jobs must be disabled.
    # enabled: false

    # Additional cert-manager resources labels and annotations.
    # labels: {}
    # annotations: {}

  # Operator certificate management jobs configuration.
  # certJobs:
    # Set to false to disable the certificate management jobs.
    # If disabled, cert-manager must be enabled, unless webhooks are also disabled.
    # enabled: true

    # Certificate management jobs parameters.
    # backoffLimit: 3
    # activeDeadlineSeconds: 90

    # Additional certificate management jobs labels and annotations.
    # labels: {}
    # annotations: {}

  # Configuration of the RDI data plane components (Collector, Collector API, Processor)
  dataPlane:
    # Configuration of the Collector (Debezium)
    collector:
      # Collector image settings.
      # If using a private image registry, update the default values accordingly.
      image:
        # Docker image registry.
        registry: docker.io

        # Docker image repository.
        repository: redislabs/debezium-server

        # Docker image tag.
        tag: 3.0.8.Final-rdi.1

      # Collector initializer settings.
      initializer:
        image:
          name: rdi-collector-initializer

      # Custom labels and annotations for Collector deployment and pods.
      # labels:
        # foo: bar
      # annotations:
        # foo: bar

      # Configuration of the Collector metrics service.
      # By default it is set to ClusterIP, allowing access only from within the cluster.
      # ref: http://kubernetes.io/docs/user-guide/services/
      service:
        type: ClusterIP
        port: 9092

        # Custom labels and annotations for Collector metrics service.
        # labels:
          # foo: bar
        # annotations:
          # foo: bar

      # Configuration of the Collector ServiceMonitor, which is used to scrape metrics from the Collector metrics service.
      serviceMonitor:
        # Set to `true` to activate the ServiceMonitor.
        enabled: false

        # Custom labels and annotations for Collector ServiceMonitor resource.
        # labels:
          # foo: bar
        # annotations:
          # foo: bar

      # Configuration of the Collector service account.
      serviceAccount:
        # Set to `false` to deactivate the service account creation.
        enabled: true

        # Custom labels and annotations for Collector service account.
        # labels:
          # foo: bar
        # annotations:
          # foo: bar

      # Configuration of the Collector metrics ingress.
      ingress:
        # Set to `true` to create an Ingress resource for the Collector metrics service.
        enabled: false

        # Path prefix for the Collector metrics ingress path.
        pathPrefix: "/metrics"

        # Collector metrics ingress class name.
        # className: alb

        # Custom labels and annotations for the Collector metrics ingress.
        # labels:
          # foo: bar
        # annotations:
          # alb.ingress.kubernetes.io/target-type: ip

    # Configuration for the Collector API
    # collectorApi:
      # Specifies whether the Collector API should be deployed.
      # enabled: true

      # Custom labels and annotations for the Collector API deployment and pods.
      # labels:
        # foo: bar
      # annotations:
        # foo: bar

      # Configuration of the Collector API service.
      # service:
        # Custom labels and annotations for Collector API service.
        # labels:
          # foo: bar
        # annotations:
          # foo: bar

    # Configuration of the Processor.
    # processor:
      # Processor log level, one of TRACE, DEBUG, INFO, WARNING, ERROR, CRITICAL.
      # If not set, global.loglevel will be used.
      # logLevel: INFO

      # Custom labels and annotations for the Processor deployment and pods.
      # labels:
        # foo: bar
      # annotations:
        # foo: bar

    # Configuration of the reset operation jobs.
    # jobs:
      # CLI log level, one of TRACE, DEBUG, INFO, WARNING, ERROR, CRITICAL.
      # If not set, global.loglevel will be used.
      # logLevel: INFO

      # Custom labels and annotations for the reset operation jobs.
      # labels:
        # foo: bar
      # annotations:
        # foo: bar

# Configuration of Fluentd.
fluentd:
  # Fluentd image settings.
  image:
    name: rdi-fluentd

    # Image pull policy.
    # ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    pullPolicy: IfNotPresent

  rdiLogsHostPath: "/opt/rdi/logs"
  podLogsHostPath: "/var/log/pods"
  logrotateMinutes: "5"

# Configuration of the RDI Metrics Exporter.
rdiMetricsExporter:
  # Metrics Exporter image settings.
  image:
    name: rdi-monitor

    # Image pull policy.
    # ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    pullPolicy: IfNotPresent

  # Custom labels and annotations for the Metrics Exporter deployment and pods.
  # labels:
    # foo: bar
  # annotations:
    # foo: bar

  # Configuration of the Metrics Exporter service.
  # By default it is set to ClusterIP, allowing access only from within the cluster.
  # ref: http://kubernetes.io/docs/user-guide/services/
  service:
    type: ClusterIP
    port: 9121

    # Custom labels and annotations for the Metrics Exporter service resource.
    # labels:
      # foo: bar
    # annotations:
      # foo: bar

  # Metrics Exporter container liveness, readiness, and startup probe parameters.
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  liveness:
    failureThreshold: 6
    periodSeconds: 10
  readiness:
    failureThreshold: 6
    periodSeconds: 30
  startup:
    failureThreshold: 60
    periodSeconds: 5

  # Configuration of the ServiceMonitor, which is used to scrape metrics from the Metrics Exporter service.
  serviceMonitor:
    # Set to `true` to activate the ServiceMonitor.
    enabled: false

    # Custom labels and annotations for the Metrics Exporter ServiceMonitor resource.
    # labels:
      # foo: bar
    # annotations:
      # foo: bar

  # Configuration of the Metrics Exporter ingress.
  ingress:
    # Set to `true` to create an Ingress resource for the Metrics Exporter service.
    enabled: false

    # Path prefix for the Metrics Exporter ingress path.
    pathPrefix: "/metrics"

    # Class name for the Metrics Exporter ingress.
    # className: alb

    # Custom labels and annotations for the Metrics Exporter Ingress resource.
    # labels:
      # foo: bar
    # annotations:
      # alb.ingress.kubernetes.io/target-type: ip

# Configuration of the RDI API.
api:
  # API image settings.
  image:
    name: rdi-api

    # Image pull policy.
    # ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    pullPolicy: IfNotPresent

  # Custom labels and annotations for the API deployment and pods.
  # labels:
    # foo: bar
  # annotations:
    # foo: bar

  # Set to `false` to disable the authentication for the RDI API.
  # authEnabled: true

  # The key used to encrypt the JWT token used by RDI API. Best practice is for this
  # to contain 32 ASCII characters (equivalent to 256 bits of data).
  jwtKey: "replace_on_install"

  # API log level, one of TRACE, DEBUG, INFO, WARNING, ERROR, CRITICAL.
  # If not set, global.loglevel will be used.
  # logLevel: INFO

  # Configuration of the API service.
  # By default, it is set to ClusterIP, allowing access only from within the cluster.
  # ref: http://kubernetes.io/docs/user-guide/services/
  service:
    type: ClusterIP
    port: 8080
    targetPort: 8081

    # Custom labels and annotations for the API service resource.
    # labels:
      # foo: bar
    # annotations:
      # foo: bar

  # API container liveness, readiness, and startup probe parameters.
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  liveness:
    failureThreshold: 6
    periodSeconds: 10
  readiness:
    failureThreshold: 6
    periodSeconds: 30
  startup:
    failureThreshold: 60
    periodSeconds: 5

  # Timeout for the communication between the API and the Collector API.
  # collectorApiTimeout: 30

# Configuration of the RDI API Ingress resource used to expose the RDI API service to be accessed from outside the cluster.
# ref: http://kubernetes.io/docs/user-guide/services/
ingress:
  # Set to `true` to enable the Ingress resource.
  enabled: false

  # Ingress class name, see https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-class.
  # If omitted, the default ingress class will be used if defined in your cluster.
  # Use `kubectl get ingressclass` to examine existing ingress classes.
  # className: ""

  # Ingress resources configure routes based on the requested host.
  # The optional `hosts` field defines the hosts for routing. If omitted, it matches all hosts.
  # hosts:
  #   - example.com
  #   - another-example.com

  # Custom labels and annotations for the Ingress resource.
  # labels:
    # foo: bar
  # annotations:
    # kubernetes.io/ingress.class: "nginx"
    # nginx.ingress.kubernetes.io/rewrite-target: /

  # Ingress resource TLS configuration.
  tls:
    # Set to `true` to enable TLS for the Ingress resource.
    enabled: false

    # When `enabled` is set to `true`, set this property to the content of the crt file.
    # crt: ""

    # When `enabled` is set to `true`, set this property to the content of the key file.
    # key: ""

# Configuration of the RDI API Route resource used to expose the RDI API service to be accessed from outside the cluster
# in an OpenShift environment.
route:
  # Set to `true` to enable the Route resource.
  enabled: false

  # Route resource TLS configuration.
  tls:
    # Set to `true` to enable TLS for the Route resource.
    enabled: false

    # Certificate PEM file content (required if `enabled` is set to `true`).
    # crt: ""

    # Private key PEM file content (required if `enabled` is set to `true`).
    # key: ""

