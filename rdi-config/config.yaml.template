# Redis RDI Configuration Template
# Copy this file to config.yaml and update with your Redis Cloud connection details

connections:
  # Redis target DB connection details
  # This section is for configuring the Redis database to which RDI will write the processed data
  target:
    type: redis
    # Replace with your Redis Cloud host
    host: YOUR_REDIS_CLOUD_HOST
    # Replace with your Redis Cloud port (usually 6379 or custom port)
    port: YOUR_REDIS_CLOUD_PORT
    # Replace with your Redis Cloud password
    password: YOUR_REDIS_CLOUD_PASSWORD
    # Optional: username (usually 'default' for Redis Cloud)
    username: default
    
    # TLS configuration (Redis Cloud typically requires TLS)
    tls: true
    # Skip certificate verification (set to false for production)
    tls_skip_verify: true

  # PostgreSQL source database connection
  source:
    type: postgresql
    host: postgresql
    port: 5432
    database: musicstore
    user: postgres
    password: postgres
    # Enable logical replication for CDC
    logical_replication: true

# Data processing configuration
applier:
  # Interval (in seconds) on which to perform retry on failure (default: 5)
  on_failed_retry_interval: 5
  # The batch size on which data will be written to target (default: 100)
  batch: 100
  # Interval (in ms) in which data will be written to target even if batch size was not reached (default: 100)
  duration: 100
  # Error handling strategy: ignore - skip, dlq - store rejected messages in a dead letter queue (default: ignore)
  error_handling: dlq
  # Dead letter queue max messages per stream (default: 1000)
  dlq_max_messages: 100
  # Target data type: hash/json - RedisJSON module must be in use in the target DB (default:hash)
  target_data_type: hash

# Source configuration for PostgreSQL
source:
  # Database connection details
  connection: source
  # Tables to replicate
  tables:
    - name: "Album"
      # Redis key pattern for albums
      key_pattern: "album:${AlbumId}"
      # Include all columns
      columns: "*"
    - name: "Track"
      # Redis key pattern for tracks
      key_pattern: "track:${TrackId}"
      # Include all columns
      columns: "*"
    - name: "Genre"
      # Redis key pattern for genres
      key_pattern: "genre:${GenreId}"
      columns: "*"
    - name: "MediaType"
      # Redis key pattern for media types
      key_pattern: "mediatype:${MediaTypeId}"
      columns: "*"
    - name: "ctf_flags"
      # Redis key pattern for CTF flags
      key_pattern: "flag:${lab_id}"
      columns: "*"

# Optional: Data transformations
transforms:
  # Example: Add a timestamp to all records
  - name: add_timestamp
    type: add_field
    field: "synced_at"
    value: "${__timestamp}"
  
  # Example: Convert track duration from milliseconds to seconds
  - name: convert_duration
    type: field_transform
    table: "Track"
    field: "Milliseconds"
    transform: "${Milliseconds / 1000}"
    target_field: "DurationSeconds"

# Monitoring and logging
logging:
  level: info
  # Log to console
  console: true
  # Optional: Log to file
  # file: /var/log/rdi.log

# Performance tuning
performance:
  # Number of worker threads
  workers: 4
  # Memory buffer size (MB)
  buffer_size: 64
  # Connection pool size
  connection_pool_size: 10
