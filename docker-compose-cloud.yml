services:
  # PostgreSQL source database
  postgresql:
    image: 'postgres:15.3-bullseye'
    container_name: rdi-postgres
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_DB=chinook
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - './create_track_table.sql:/docker-entrypoint-initdb.d/create_track_table.sql'
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Insight for monitoring cloud Redis
  redis-insight:
    image: redis/redisinsight:latest
    container_name: rdi-insight
    ports:
      - '5540:5540'
    volumes:
      - redis-insight-data:/data

  # RDI CLI container with server
  rdi-cli:
    build:
      context: .
      dockerfile: rdi.dockerfile
    container_name: rdi-cli
    ports:
      - '13000:13000'
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_USER=${REDIS_USER:-default}
      - POSTGRES_HOST=postgresql
      - POSTGRES_PORT=5432
      - POSTGRES_DB=chinook
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - './rdi-config:/config'
      - './from-repo/scripts:/scripts'
    depends_on:
      postgresql:
        condition: service_healthy
    command: sh -c "cd /downloads/rdi_install/1.10.0 && echo '${REDIS_HOST}\n${REDIS_PORT}\n${REDIS_USER}\n${REDIS_PASSWORD}\nn\n443\ny\ny\n8.8.8.8,8.8.4.4\n1\n' | sudo ./install.sh -l DEBUG && tail -f /dev/null"

  # Load generator for testing
  loadgen:
    build:
      context: .
      dockerfile: rdi.dockerfile
    container_name: rdi-loadgen
    environment:
      - POSTGRES_HOST=postgresql
      - POSTGRES_PORT=5432
      - POSTGRES_DB=chinook
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - './from-repo/scripts:/scripts'
    depends_on:
      postgresql:
        condition: service_healthy

  # SQLPad for PostgreSQL queries
  sqlpad:
    image: 'sqlpad/sqlpad:6'
    container_name: rdi-sqlpad
    ports:
      - '3001:3000'
    environment:
      SQLPAD_ADMIN: 'admin@rl.org'
      SQLPAD_ADMIN_PASSWORD: 'redislabs'
      SQLPAD_APP_LOG_LEVEL: info
      SQLPAD_WEB_LOG_LEVEL: warn
      SQLPAD_CONNECTIONS__pgdemo__name: Ingest-Postgres-DB
      SQLPAD_CONNECTIONS__pgdemo__driver: postgres
      SQLPAD_CONNECTIONS__pgdemo__host: postgresql
      SQLPAD_CONNECTIONS__pgdemo__database: chinook
      SQLPAD_CONNECTIONS__pgdemo__username: postgres
      SQLPAD_CONNECTIONS__pgdemo__password: postgres
    depends_on:
      postgresql:
        condition: service_healthy

  # Web interface for instructions
  web:
    image: nginx:alpine
    container_name: rdi-web
    ports:
      - '8080:80'
    volumes:
      - './web:/usr/share/nginx/html'
    restart: unless-stopped

volumes:
  redis-insight-data:
